
/**
 * Creates a (potentially massive) set of placeholder styles.
 *
 * @param args A SASS map containing the following keys (those with defaults are optional):
 *
 *   property                            - The CSS property name, e.g. 'grid-column-start'.
 *   property-alias - default: $property - I.e 'u-[property-alias]-value'.
 *   value-start    - default: 0         - Property's value to start at.
 *   value-end      - default: 10        - Property's value to end at.
 *   step           - default: 1         - Amount to increment the value between placeholders.
 *   prefix         - default: ''        - String to shove before the value, e.g. ???
 *   postfix        - default: ''        - String to shove after the value, e.g. 'px'.
 *
 * Extra temporary notes (TODO: Remove)
 *   Might need to use 'unquote($value)' because of strings.
 *
 */

@mixin auto-gen-placeholders($args) {

  //@debug $args;

  $property: map-get($args, 'property');
  $property-alias: map-use($args, 'property-alias', $property);
  $step: map-use($args, 'step', 1);
  $value-start: (map-use($args, 'value-start', 0)) / $step;
  $value-end: map-use($args, 'value-end', 10) / $step;
  $prefix: map-use($args, 'prefix', '');
  $postfix: map-use($args, 'postfix', '');

  @for $i from $value-start through $value-end {

    $placeholder-name: $global-utilities-namespace + $property-alias + $i;
    $value: $prefix + $i * $step + $postfix;

    // For no breakpoint
    %#{$placeholder-name} {
      #{$property}: $value;
    }

    // For every breakpoint
    @each $breakpoint-key, $breakpoint-value in $global-breakpoints {
      %#{$placeholder-name + '--' + $breakpoint-key} {
        @include breakpoint($breakpoint-key) {
          #{$property}: $value;
        }
      }
    }

  }

}

@mixin make-placeholder($args)
{

  // If 'alias' key exists in $args, use that for the placeholder-name,
  // otherwise use the key and value of the first property in $args
  $placeholder-name: map-use(
    $args,
    'property-alias',
    first(map-keys($args)) + '-' + first(map-values($args))
  );

  $placeholder-name: $global-utilities-namespace + $placeholder-name;

  // Use the $args map, minus the alias (if it exists) as the properties map
  $properties: map-remove($args, 'property-alias');

  // Debug output to list off all the placeholders being made:
  @debug('Making placeholder: ' + $placeholder-name);

  // For no breakpoint
  %#{$placeholder-name} {
    @each $property, $value in $properties {
      #{$property}: $value;
    }
  }

  // For every breakpoint
  @each $breakpoint-key, $breakpoint-value in $global-breakpoints {
    %#{$placeholder-name + '--' + $breakpoint-key} {
      @include breakpoint($breakpoint-key) {
        @each $property, $value in $properties {
          #{$property}: $value;
        }
      }
    }
  }
}




