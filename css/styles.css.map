{"version":3,"sources":["tools/_breakpoints.scss","settings/_container.scss","styles.css","settings/_utilities.scss","settings/_combinator-utilities.scss","settings/_number-utilities.scss","settings/_number-utilities-flex.scss","settings/_unit-utilities.scss","settings/_unit-utilities-position.scss","settings/_word-utilities.scss","settings/_word-utilities-flex.scss","settings/_word-utilities-colours.scss","base/_reset.scss","tools/_utilities.scss","tools/_make-class.scss","tools/_number-utilities.scss","utilities/_type.scss","objects/_container.scss","objects/_aspect-ratio.scss","objects/_position.scss","objects/_hide.scss","objects/_dictate.scss","components/_button.scss"],"names":[],"mappings":"AAcA,qCAAqC;ACdrC;EACE,uBAAuB;CAKxB;;ADAG;ECNJ;IAII,6BAAsB;GAEzB;CCGA;;ACHD;;GAEG;ACRH;;GAEG;ACFH;;;;GAIG;ACJH;;GAEG;ACFH;;GAEG;ACFH;;GAEG;ACFH;;GAEG;ACFH;;GAEG;ACFH;;GAEG;ACFH;;;;;;;;;;;;EAYE,yBAAyB;EACzB,UAAU;EACV,WAAW;EACX,wBAAwB;EACxB,UAAU;EACV,WAAW;EACX,gBAAgB;CACjB;;AAED;;EAEE,iBAAiB;CAClB;;AAED;EACE,mBAAmB;EACnB,mBAAmB;CACpB;;AAED;EACE,eAAe;CAChB;;AAED;;;;;;;;;;;;EAYE,eAAe;CAChB;;AAED;;;;;;EAME,oBAAoB;CACrB;;AAED;EACE,iBAAiB;CAClB;;AAED;;EAEE,aAAY;CACb;;AAED;;;;EAIE,YAAY;EACZ,cAAc;CACf;;AAED;EACE,yBAAyB;EACzB,UAAU;EACV,WAAW;EACX,wBAAwB;EACxB,gBAAgB;EAChB,eAAe;EACf,sBAAsB;EACtB,yCAAiC;CAOlC;;AAfD;EAaI,yCAAiC;CAClC;;AAGH;EACE,uBAAuB;EACvB,YAAY;EACZ,sBAAsB;CACvB;;AAED;EACE,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,YAAY;CACb;;AAED;EACE,8BAA8B;CAC/B;;AAED;;EAEE,0BAA0B;EAC1B,aAAa;CACd;;AAED;EACE,0BAA0B;EAC1B,kBAAkB;CACnB;;AAED;EACE,eAAe;CAChB;;AAED;EACE,UAAU;EACV,WAAW;EACX,iBAAiB;EACjB,aAAa;EACb,oBAAoB;CACrB;;AAED;;;EAGE,gBAAgB;CACjB;;AAED;;EAEE,uBAAuB;CACxB;;AAED;;;;EAIE,cAAc;EACd,eAAe;CAChB;;AAED;;EAEE,WAAW;EACX,UAAU;CACX;;AAED;EACE,cAAc;CACf;;AAED;;;;EAIE,uBAAuB;EACvB,+DAA8D;EAC9D,4DAA2D;CAC5D;;ACxKG;EAwFgB,gBAAc;CAtF7B;;AAFD;EAwFgB,mBAAc;CAtF7B;;ACFH;EAEI,mBAAoB;CAEvB;;AAJD;EAEI,iBAAoB;CAEvB;;AAJD;EAEI,iBAAoB;CAEvB;;AAJD;EAEI,mBAAoB;CAEvB;;AAJD;EAEI,mBAAoB;CAEvB;;AAJD;EAEI,mBAAoB;CAEvB;;AAJD;EAEI,cAAoB;CAEvB;;AAJD;EAEI,kBAAoB;EAApB,cAAoB;CAEvB;;AAJD;EAEI,eAAoB;CAEvB;;AAJD;EAEI,cAAoB;CAEvB;;AAJD;EAEI,qBAAoB;CAEvB;;AAJD;EAEI,uBAAoB;CAEvB;;AAJD;EAEI,gBAAoB;CAEvB;;AAJD;EAEI,kBAAoB;CAEvB;;AAJD;EAEI,wBAAoB;CAEvB;;AAJD;EAEI,oBAAoB;CAEvB;;AAJD;EAEI,sBAAoB;CAEvB;;AAJD;EAEI,wBAAoB;CAEvB;;AAJD;EAEI,+BAAoB;CAEvB;;AAJD;EAEI,8BAAoB;CAEvB;;AAJD;EAEI,eAAoB;CAEvB;;AAJD;EAEI,0BAAoB;CAEvB;;AAJD;EAEI,cAAoB;CAEvB;;ACsBS;EACE,YAAc;CACf;;AAFD;EACE,WAAc;CACf;;AAFD;EACE,WAAc;CACf;;AD5BX;EAEI,aAAoB;CAEvB;;AAJD;EAEI,aAAoB;CAEvB;;AAJD;EAEI,eAAoB;CAEvB;;AAJD;EAEI,eAAoB;CAEvB;;AAJD;EAEI,cAAoB;CAEvB;;AAJD;EAEI,YAAoB;CAEvB;;AAJD;EAEI,WAAoB;CAEvB;;AAJD;EAEI,aAAoB;CAEvB;;AAJD;EAEI,YAAoB;CAEvB;;AAJD;EAEI,mBAAoB;EAApB,kBAAoB;CAEvB;;AAJD;EAEI,SAAoB;CAEvB;;AAJD;EAEI,OAAoB;CAEvB;;AAJD;EAEI,YAAoB;CAEvB;;AAJD;EAEI,SAAoB;CAEvB;;AAJD;EAEI,UAAoB;CAEvB;;AAJD;EAEI,UAAoB;CAEvB;;AAJD;EAEI,WAAoB;CAEvB;;AAJD;EAEI,QAAoB;CAEvB;;AELH;EACE,YAAY;CACb;;ACFD;;GAEG;AAIH;EAEE,6BAAU;CACX;;ACTD;;GAEG;AAIH;EAmBQ,iBAAa;CACd;;AApBP;EAmBQ,kBAAa;CACd;;AC1BP;;GAEG;AAaH;;GAEG;AAIH;EAIE,iCAAoB;CACrB;;AAED;;GAEG;AAUH;;GAEG;AC1CH;;GAEG;AAIH;EAME,uBAAU;CACX;;ACbD;;;GAGG;AAIH;EAKE,+BAAU;CACX;;ACbD;;GAEG","file":"styles.css","sourcesContent":["@mixin breakpoint($size, $breakpoints: $global-breakpoints) {\n  $breakpoint-found: map-has-key($breakpoints, $size);\n\n  @if ($breakpoint-found == true) {\n    $breakpoint: map-get($breakpoints, $size);\n\n    @media #{$breakpoint} {\n      @content;\n    }\n  } @else {\n    @warn \"Breakpoint size \" + #{$size} + \" doesn't exist.\"\n  }\n}\n\n/* Source: IotaCSS iota-breakpoint */\n",":root {\n  --ContainerWidth: 98vw;\n\n  @include breakpoint(fromlarge) {\n    --ContainerWidth: calc(90vw);\n  }\n}","/* Source: IotaCSS iota-breakpoint */\n:root {\n  --ContainerWidth: 98vw;\n}\n\n@media screen and (min-width: 1400px) {\n  :root {\n    --ContainerWidth: calc(90vw);\n  }\n}\n\n/**\n * Unit Utilities\n */\n/**\n * Combinator Utilities\n */\n/**\n * Number Utilities\n * - optional: Ranges of Numbers\n * - optional: Steps within ranges.\n */\n/**\n * Number Utilities - Flex\n */\n/**\n * Unit Utilities\n */\n/**\n * Unit Utilities - Position\n */\n/**\n * Word Utilities\n */\n/**\n * Word Utilities - Flex\n */\n/**\n * Word Utilities - Colours\n */\nhtml, body, div, span, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\nabbr, address, cite, code,\ndel, dfn, em, img, ins, kbd, q, samp,\nsmall, strong, sub, sup, var,\nb, i,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, main, aside, canvas, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section, summary,\ntime, mark, audio, video {\n  vertical-align: baseline;\n  margin: 0;\n  padding: 0;\n  background: transparent;\n  border: 0;\n  outline: 0;\n  font-size: 100%;\n}\n\nhtml,\nbody {\n  min-height: 100%;\n}\n\nhtml {\n  overflow-x: hidden;\n  overflow-y: scroll;\n}\n\n:root {\n  line-height: 1;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nmain,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: normal;\n}\n\nli {\n  list-style: none;\n}\n\nblockquote,\nq {\n  quotes: none;\n}\n\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: '';\n  content: none;\n}\n\na {\n  vertical-align: baseline;\n  margin: 0;\n  padding: 0;\n  background: transparent;\n  font-size: 100%;\n  color: inherit;\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\na:hover, a:focus, a:active {\n  -webkit-tap-highlight-color: transparent;\n}\n\nins {\n  background-color: #ff9;\n  color: #000;\n  text-decoration: none;\n}\n\nmark {\n  background-color: #ff9;\n  font-style: italic;\n  font-weight: bold;\n  color: #000;\n}\n\ndel {\n  text-decoration: line-through;\n}\n\nabbr[title],\ndfn[title] {\n  border-bottom: 1px dotted;\n  cursor: help;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\nhr {\n  display: block;\n}\n\nbutton {\n  margin: 0;\n  padding: 0;\n  background: none;\n  border: none;\n  text-align: inherit;\n}\n\nlabel,\nbutton,\nselect {\n  cursor: pointer;\n}\n\ninput,\nselect {\n  vertical-align: middle;\n}\n\ninput,\nselect,\ntextarea,\nbutton {\n  font: inherit;\n  color: inherit;\n}\n\ninput::-moz-focus-inner,\nbutton::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\n\ncode {\n  font: inherit;\n}\n\n*,\n*:before,\n*:after,\n* * {\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0) !important;\n  -webkit-focus-ring-color: rgba(255, 255, 255, 0) !important;\n}\n\n.u-pos-fixed {\n  position: fixed;\n}\n\n.test, .u-pos-rel {\n  position: relative;\n}\n\n.u-pos-abs, .u-pos-abs\\@hover:hover, .u-pos-abs\\@focus:focus {\n  position: absolute;\n}\n\n.u-sibling-mt-2rem > * + * {\n  margin-top: 2rem;\n}\n\n.u-ov-hidden, .o-hide, .o-dictate {\n  overflow: hidden;\n}\n\n.u-vis-hidden, .o-hide {\n  visibility: hidden;\n}\n\n.u-pos-absolute, .o-aspect-ratio > *, .o-absfill, .o-abscentre, .o-dictate {\n  position: absolute;\n}\n\n.u-pos-relative, .o-aspect-ratio, .o-hide {\n  position: relative;\n}\n\n.u-flex {\n  display: flex;\n}\n\n.u-grid {\n  display: grid;\n}\n\n.u-block, .o-aspect-ratio:before {\n  display: block;\n}\n\n.u-none {\n  display: none;\n}\n\n.u-pointer-none, .o-hide {\n  pointer-events: none;\n}\n\n.u-fd-col {\n  flex-direction: column;\n}\n\n.u-fw-wrap {\n  flex-wrap: wrap;\n}\n\n.u-fw-no {\n  flex-wrap: nowrap;\n}\n\n.u-ai-start {\n  align-items: flex-start;\n}\n\n.u-ai-center {\n  align-items: center;\n}\n\n.u-ai-end {\n  align-items: flex-end;\n}\n\n.u-jc-center {\n  justify-content: center;\n}\n\n.u-jc-between {\n  justify-content: space-between;\n}\n\n.u-jc-around {\n  justify-content: space-around;\n}\n\n.u-color-white {\n  color: #FFFFFF;\n}\n\n.u-bgcolor-brand {\n  background-color: #FFFFFF;\n}\n\n.u-fill-white {\n  fill: #FFFFFF;\n}\n\n.u-z--1, .o-hide {\n  z-index: -1;\n}\n\n.u-z-0 {\n  z-index: 0;\n}\n\n.u-z-1 {\n  z-index: 1;\n}\n\n.u-grow-0 {\n  flex-grow: 0;\n}\n\n.u-grow-1 {\n  flex-grow: 1;\n}\n\n.u-shrink-0 {\n  flex-shrink: 0;\n}\n\n.u-shrink-1 {\n  flex-shrink: 1;\n}\n\n.u-basis-0 {\n  flex-basis: 0;\n}\n\n.u-width-100pc, .o-aspect-ratio:before, .o-absfill {\n  width: 100%;\n}\n\n.u-width-1px, .o-dictate {\n  width: 1px;\n}\n\n.u-height-100pc, .o-absfill {\n  height: 100%;\n}\n\n.u-height-1px, .o-dictate {\n  height: 1px;\n}\n\n.u-mh-auto, .o-container {\n  margin-right: auto;\n  margin-left: auto;\n}\n\n.u-top-50pc, .o-abscentre {\n  top: 50%;\n}\n\n.u-top-0, .o-absfill {\n  top: 0;\n}\n\n.u-right-100pc {\n  right: 100%;\n}\n\n.u-right-0 {\n  right: 0;\n}\n\n.u-bottom-0 {\n  bottom: 0;\n}\n\n.u-left-50pc, .o-abscentre {\n  left: 50%;\n}\n\n.u-left-100pc {\n  left: 100%;\n}\n\n.u-left-0, .o-absfill {\n  left: 0;\n}\n\n.o-aspect-ratio:before {\n  content: '';\n}\n\n/**\n * .o-container\n */\n.o-container {\n  width: var(--ContainerWidth);\n}\n\n/**\n * .o-aspect-ratio\n */\n.o-aspect-ratio--50:before {\n  padding-top: 50%;\n}\n\n.o-aspect-ratio--100:before {\n  padding-top: 100%;\n}\n\n/**\n * .o-absfill\n */\n/**\n * .o-abscentre\n */\n.o-abscentre {\n  transform: translate(-50%, -50%);\n}\n\n/**\n * .o-abscentre-y\n */\n/**\n * .o-abscentre-x\n */\n/**\n * .o-hide\n */\n.o-hide {\n  clip: rect(0, 0, 0, 0);\n}\n\n/**\n * .o-dictate\n * Visually hidden, but provided for screen readers (dictated).\n */\n.o-dictate {\n  clip: rect(1px, 1px, 1px, 1px);\n}\n\n/**\n * .c-button\n */\n","@function gutters($count) {\n\n  @return calc(var(--GutterUnit) * #{$count});\n\n}\n\n/**\n * Unit Utilities\n */\n\n$utilitiesSettings: (\n  (\n    property: ('position', 'pos-'),\n\n    values: (\n      (\n        'fixed',\n        ('relative', 'rel'),\n      ),\n      (\n        value: ('absolute', 'abs'),\n        pseudos: ('hover', 'focus'),\n        breakpoints: ('uptosmall', 'smalltomed'),\n      ),\n    ),\n\n    placeholders: (\n      'static',\n      ('dynamic', 'dyn'),\n    ),\n  ),\n  // (\n  //   property: 'top',\n\n  //   values: (\n  //     (\n  //       '0',\n  //       'auto',\n  //       '1rem',\n  //       '1.5rem',\n  //       '2rem',\n  //     ),\n  //     (\n  //       unit: ('%', 'pc'),\n  //       start: 10,\n  //       end: 90,\n  //       steps: 10,\n  //     ),\n  //     (\n  //       unit: 'vw',\n  //       values: (10, 30, 35, 50, 85),\n  //       pseudos: ('hover', 'focus'),\n  //       breakpoints: ('uptosmall', 'smalltomed'),\n  //     ),\n  //     (\n  //       value: ('absolute', 'abs'),\n  //       pseudos: ('hover', 'focus'),\n  //       breakpoints: ('uptosmall', 'smalltomed'),\n  //     ),\n  //   ),\n\n  //   placeholders: (\n  //     (gutters(2), '2gu'),\n  //     ('calc(var(--GutterUnit) * 2)', '2gu'),\n  //   ),\n  // ),\n);\n","/**\n * Combinator Utilities\n */\n\n$combinatorUtilitiesSettings: (\n  ( combinator: '> * + *',\n    properties: (\n      ( property: 'margin-top',\n        propertyClass: 'sibling-mt-',\n\n        units: (\n          (\n            unit: 'rem',\n            unitClass: $global-rem-class,\n\n            values: (\n              (\n                value: 2,\n              ),\n            ),\n          ),\n        ),\n      ),\n    ),\n  ),\n);\n","/**\n * Number Utilities\n * - optional: Ranges of Numbers\n * - optional: Steps within ranges.\n */\n\n$numberUtilitiesSettings: (\n  ( property: 'z-index',\n    propertyClass: 'z-',\n\n    ranges: (\n      (\n        start: -1,\n        end: 1,\n      ),\n    ),\n  ),\n);\n","/**\n * Number Utilities - Flex\n */\n\n$numberUtilitiesFlexSettings: (\n  (\n    property: 'flex-grow',\n    propertyClass: 'grow-',\n\n    values: (\n      (\n        value: 0,\n      ),\n      (\n        value: 1,\n      ),\n    ),\n  ),\n  (\n    property: 'flex-shrink',\n    propertyClass: 'shrink-',\n\n    values: (\n      (\n        value: 0,\n      ),\n      (\n        value: 1,\n      ),\n    ),\n  ),\n  (\n    property: 'flex-basis',\n    propertyClass: 'basis-',\n\n    values: (\n      (\n        value: 0,\n      ),\n    ),\n  ),\n);\n","/**\n * Unit Utilities\n */\n\n$unitUtilitiesSettings: (\n  ( property: 'width',\n    propertyClass: 'width-',\n\n    units: (\n      (\n        unit: '%',\n        unitClass: $global-percentage-class,\n\n        values: (\n          (\n            value: 100,\n          ),\n        ),\n      ),\n      (\n        unit: 'px',\n        unitClass: $global-px-class,\n\n        values: (\n          (\n            value: 1,\n          ),\n        ),\n      ),\n    ),\n  ),\n  ( property: 'height',\n    propertyClass: 'height-',\n\n    units: (\n      (\n        unit: '%',\n        unitClass: $global-percentage-class,\n\n        values: (\n          (\n            value: 100,\n          ),\n        ),\n      ),\n      (\n        unit: 'px',\n        unitClass: $global-px-class,\n\n        values: (\n          (\n            value: 1,\n          ),\n        ),\n      ),\n    ),\n  ),\n  ( property: ('margin-right', 'margin-left'),\n    propertyClass: 'mh-',\n\n    keywords: (\n      (\n        keyword: 'auto',\n      ),\n    ),\n  ),\n);\n","/**\n * Unit Utilities - Position\n */\n\n$unitUtilitiesPositionSettings: (\n  ( property: 'top',\n    propertyClass: 'top-',\n\n    units: (\n      (\n        unit: '%',\n        unitClass: $global-percentage-class,\n\n        values: (\n          (\n            value: 50,\n          ),\n        ),\n      ),\n    ),\n\n    keywords: (\n      (\n        keyword: 0,\n      ),\n    ),\n  ),\n  ( property: 'right',\n    propertyClass: 'right-',\n\n    units: (\n      (\n        unit: '%',\n        unitClass: $global-percentage-class,\n\n        values: (\n          (\n            value: 100,\n          ),\n        ),\n      ),\n    ),\n\n    keywords: (\n      (\n        keyword: 0,\n        keywordClass: '0',\n      ),\n    ),\n  ),\n  ( property: 'bottom',\n    propertyClass: 'bottom-',\n\n    keywords: (\n      (\n        keyword: 0,\n      ),\n    ),\n  ),\n  ( property: 'left',\n    propertyClass: 'left-',\n\n    units: (\n      (\n        unit: '%',\n        unitClass: $global-percentage-class,\n\n        values: (\n          (\n            value: 50,\n          ),\n          (\n            value: 100,\n          ),\n        ),\n      ),\n    ),\n\n    keywords: (\n      (\n        keyword: 0,\n      ),\n    ),\n  ),\n);\n","/**\n * Word Utilities\n */\n\n$wordUtilitiesSettings: (\n  (\n    property: 'overflow',\n    propertyClass: 'ov-',\n\n    values: (\n      (\n        value: 'hidden',\n      ),\n    ),\n  ),\n  (\n    property: 'visibility',\n    propertyClass: 'vis-',\n\n    values: (\n      (\n        value: 'hidden',\n      ),\n    ),\n  ),\n  (\n    property: 'position',\n    propertyClass: 'pos-',\n\n    values: (\n      (\n        value: 'absolute',\n      ),\n      (\n        value: 'relative',\n      ),\n    ),\n  ),\n  (\n    property: 'display',\n    propertyClass: '',\n\n    values: (\n      (\n        value: 'flex',\n      ),\n      (\n        value: 'grid',\n      ),\n      (\n        value: 'block',\n      ),\n      (\n        value: 'none',\n      ),\n    ),\n  ),\n  (\n    property: 'pointer-events',\n    propertyClass: 'pointer-',\n\n    values: (\n      (\n        value: 'none',\n      ),\n    ),\n  ),\n);\n","/**\n * Word Utilities - Flex\n */\n\n$wordUtilitiesFlexSettings: (\n  (\n    property: 'flex-direction',\n    propertyClass: 'fd-',\n\n    values: (\n      (\n        value: 'column',\n        valueClass: 'col',\n      ),\n    ),\n  ),\n  (\n    property: 'flex-wrap',\n    propertyClass: 'fw-',\n\n    values: (\n      (\n        value: 'wrap',\n      ),\n      (\n        value: 'nowrap',\n        valueClass: 'no',\n      ),\n    ),\n  ),\n  (\n    property: 'align-items',\n    propertyClass: 'ai-',\n\n    values: (\n      (\n        value: 'flex-start',\n        valueClass: 'start',\n      ),\n      (\n        value: 'center',\n      ),\n      (\n        value: 'flex-end',\n        valueClass: 'end',\n      ),\n    ),\n  ),\n  (\n    property: 'justify-content',\n    propertyClass: 'jc-',\n\n    values: (\n      (\n        value: 'center',\n      ),\n      (\n        value: 'space-between',\n        valueClass: 'between',\n      ),\n      (\n        value: 'space-around',\n        valueClass: 'around',\n      ),\n    ),\n  ),\n);\n","/**\n * Word Utilities - Colours\n */\n\n$wordUtilitiesColoursSettings: (\n  (\n    property: 'color',\n    propertyClass: 'color-',\n\n    values: (\n      (\n        value: $colour-white,\n        valueClass: 'white',\n      ),\n    ),\n  ),\n  (\n    property: 'background-color',\n    propertyClass: 'bgcolor-',\n\n    values: (\n      (\n        value: $colour-brand,\n        valueClass: 'brand',\n      ),\n    ),\n  ),\n  (\n    property: 'fill',\n    propertyClass: 'fill-',\n\n    values: (\n      (\n        value: $colour-white,\n        valueClass: 'white',\n      ),\n    ),\n  ),\n);\n","html, body, div, span, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\nabbr, address, cite, code,\ndel, dfn, em, img, ins, kbd, q, samp,\nsmall, strong, sub, sup, var,\nb, i,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, main, aside, canvas, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section, summary,\ntime, mark, audio, video {\n  vertical-align: baseline;\n  margin: 0;\n  padding: 0;\n  background: transparent;\n  border: 0;\n  outline: 0;\n  font-size: 100%;\n}\n\nhtml,\nbody {\n  min-height: 100%;\n}\n\nhtml {\n  overflow-x: hidden;\n  overflow-y: scroll;\n}\n\n:root {\n  line-height: 1;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nmain,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: normal;\n}\n\nli {\n  list-style: none;\n}\n\nblockquote,\nq {\n  quotes:none;\n}\n\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: '';\n  content: none;\n}\n\na {\n  vertical-align: baseline;\n  margin: 0;\n  padding: 0;\n  background: transparent;\n  font-size: 100%;\n  color: inherit;\n  text-decoration: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n\n  &:hover,\n  &:focus,\n  &:active {\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\n  }\n}\n\nins {\n  background-color: #ff9;\n  color: #000;\n  text-decoration: none;\n}\n\nmark {\n  background-color: #ff9;\n  font-style: italic;\n  font-weight: bold;\n  color: #000;\n}\n\ndel {\n  text-decoration: line-through;\n}\n\nabbr[title],\ndfn[title] {\n  border-bottom: 1px dotted;\n  cursor: help;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\nhr {\n  display: block;\n}\n\nbutton {\n  margin: 0;\n  padding: 0;\n  background: none;\n  border: none;\n  text-align: inherit;\n}\n\nlabel,\nbutton,\nselect {\n  cursor: pointer;\n}\n\ninput,\nselect {\n  vertical-align: middle;\n}\n\ninput,\nselect,\ntextarea,\nbutton {\n  font: inherit;\n  color: inherit;\n}\n\ninput::-moz-focus-inner,\nbutton::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\n\ncode {\n  font: inherit;\n}\n\n*,\n*:before,\n*:after,\n* * {\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0) !important;\n  -webkit-focus-ring-color: rgba(255, 255, 255, 0) !important;\n}\n","@mixin createPlaceholder($placeholder) {\n    %#{$placeholder} {\n        @content;\n    }\n}\n\n@mixin extend($placeholder) {\n    @extend %#{$placeholder};\n}\n  \n// $placeholderName: 'u-color-grey';\n// $placeholderProperty: 'color';\n// $placeholderValue: 'grey';\n  \n// @include createPlaceholder($placeholderName) {\n//     #{$placeholderProperty}: #{$placeholderValue};\n// }\n  \n// #{'.' + $placeholderName} {\n//     @extend %#{$placeholderName};\n// }\n\n@function ifhasget($map, $value) {\n\n    @if map-has-key($map, $value) {\n        @return map-get($map, $value);\n    }\n}\n\n@function ifnoterror($map, $value, $error) {\n\n    @if map-has-key($map, $value) {\n        @return map-get($map, $value);\n    }\n\n    @else {\n        @error $error;\n    }\n}\n\n@mixin makeUtilities($settings) {\n\n  // each property...\n  @each $propertySetting in $settings {\n\n    // property:\n    $propertyName: ifnoterror($propertySetting, property, 'No property declared!');\n    $property: '';\n    $propertyClass: '';\n\n    @if (type_of($property) == string) {\n        // should hyphen be enforced?\n        $property: $propertyName;\n        $propertyClass: $propertyName + '-';\n    }\n\n    @if (type_of($property) == list) {\n        $property: first($propertyName);\n        $propertyClass: last($propertyName);\n    }\n    \n    $values: ifhasget($propertySetting, values);\n\n    @each $valueSetting in $values {\n\n        @if (type_of($valueSetting) == list) {\n\n            // Simple Values\n            @each $simpleValue in $valueSetting {\n\n                $value: '';\n                $valueClass: '';\n\n                // Value = Class\n                @if type_of($simpleValue) == string {\n                    $value: $simpleValue;\n                    $valueClass: $simpleValue;\n                }\n                \n                // Value has Class nickname\n                @if type_of($simpleValue) == list {\n                    $value: first($simpleValue);\n                    $valueClass: last($simpleValue);\n                }\n\n                $pair: $propertyClass + $valueClass;\n                $selector: #{'.' + $global-utilities-namespace + $pair};\n\n                @include createPlaceholder($pair) {\n                    #{$property}: #{$value};\n                }\n\n                #{$selector} {\n                    @extend %#{$pair};\n                }\n\n                .test {\n                    @extend %pos-rel;\n                }\n\n                // @include makeClass($selectorClass, $property, $value);\n\n            }\n        }\n\n        @if (type_of($valueSetting) == map) {\n\n            $valueName: ifnoterror($valueSetting, value, 'No value declared!');\n            $valueClass: '';\n\n            // Value = Class\n            @if type_of($valueName) == string {\n\n                $value: $valueName;\n                $valueClass: $valueName;\n\n                $selector: #{'.' + $global-utilities-namespace + $propertyClass + $valueClass};\n                @include makeClass($selector, $property, $value);\n            }\n\n            // Value has Class nickname\n            @if type_of($valueName) == list {\n\n                $value: first($valueName);\n                $valueClass: last($valueName);\n\n                $selector: #{'.' + $global-utilities-namespace + $propertyClass + $valueClass};\n                @include makeClass($selector, $property, $value);\n            }\n            \n            // Pseudos\n            $pseudos: ifhasget($valueSetting, pseudos);\n            \n            @each $pseudo in $pseudos {\n    \n                @if (type_of($pseudo) == list) {\n    \n                    $pseudoClass: str-replace(to-string($pseudo), '\" ', '');\n    \n                    @each $pseudoName in $pseudo {\n    \n                        #{'.' + $global-utilities-namespace + $propertyClass + $valueClass + $global-pseudo-separator + $pseudoClass + ':' + $pseudoName} {\n        \n                            @extend #{'.' + $global-utilities-namespace + $propertyClass + $valueClass} !optional;\n                        }\n                    }\n                }\n\n                @else {\n                    #{'.' + $global-utilities-namespace + $propertyClass + $valueClass + $global-pseudo-separator + $pseudo + ':' + $pseudo} {\n                        @extend #{'.' + $global-utilities-namespace + $propertyClass + $valueClass} !optional;\n                    }\n                }\n            }\n\n            // $psuedos: ifhasget($valueSetting, pseudos);\n\n            // $breakpoints: ifhasget($valueSetting, breakpoints);\n        }\n    }\n\n\n    // ...\n\n    // $placeholders: ifhasget($propertySetting, placeholders);\n\n    // $propertyClass: map-get($utilitySetting, propertyClass);\n\n    // @if map-has-key($utilitySetting, ranges) {\n\n    //   @each $rangeSetting in map-get($utilitySetting, ranges) {\n\n    //     $start: map-get($rangeSetting, start);\n    //     $end: map-get($rangeSetting, end);\n    //     $steps: 1; // default\n\n    //     @if map-has-key($rangeSetting, steps) {\n    //       $steps: map-get($rangeSetting, steps);\n    //     }\n\n    //     @if map-get($rangeSetting, global) != false {\n\n    //       $value: $start;\n\n    //       @while $value <= $end {\n\n    //         $valueClass: str-replace(to-string($value), '.', '');\n\n    //         #{'.' + $global-utilities-namespace + $propertyClass + $valueClass} {\n    //           #{$property}: #{$value};\n    //         }\n\n    //         $value: $value + $steps;\n    //       }\n    //     }\n    //   }\n    // }\n\n//     @if map-has-key($utilitySetting, values) {\n\n//       @each $valueSetting in map-get($utilitySetting, values) {\n\n//         $value: map-get($valueSetting, value);\n\n//         $valueClass: '';\n//         @if map-has-key($valueSetting, valueClass) {\n//           $valueClass: map-get($valueSetting, valueClass);\n//         }\n//         @else {\n//           $valueClass: $value;\n//         }\n\n//         @if map-get($valueSetting, global) != false {\n\n//           $selector: #{'.' + $global-utilities-namespace + $propertyClass + $valueClass};\n//           @include makeClass($selector, $property, $value);\n//         }\n\n//         @if map-has-key($valueSetting, responsive) {\n//           @each $breakpointName in map-get($valueSetting, responsive) {\n//             @include breakpoint($breakpointName) {\n\n//               $selector: #{'.' + $global-utilities-namespace + $propertyClass + $valueClass + $global-breakpoint-separator + $breakpointName};\n\n//               @include makeClass($selector, $property, $value);\n//             }\n//           }\n//         }\n\n//         @if map-has-key($valueSetting, pseudo) {\n\n//           @each $pseudo in map-get($valueSetting, pseudo) {\n\n//             @if (type_of($pseudo) == list) {\n\n//               $pseudoClass: str-replace(to-string($pseudo), '\" ', '');\n\n//               @each $pseudoName in $pseudo {\n\n//                 #{'.' + $global-utilities-namespace + $propertyClass + $valueClass + $global-pseudo-separator + $pseudoClass + ':' + $pseudoName} {\n\n//                   @extend #{'.' + $global-utilities-namespace + $propertyClass + $valueClass} !optional;\n//                 }\n//               }\n//             }\n\n//             @else {\n//               #{'.' + $global-utilities-namespace + $propertyClass + $valueClass + $global-pseudo-separator + $pseudo + ':' + $pseudo} {\n//                 @extend #{'.' + $global-utilities-namespace + $propertyClass + $valueClass} !optional;\n//               }\n//             }\n//           }\n//         }\n//       }\n//     }\n  }\n}\n","@mixin makeClass($selector, $properties, $value) {\n  #{$selector} {\n    @each $propertySingle in $properties {\n      #{$propertySingle}: #{$value};\n    }\n  }\n}\n","@mixin makeNumberUtilities($settings) {\n\n  @each $utilitySetting in $settings {\n\n    $property: map-get($utilitySetting, property);\n    $propertyClass: map-get($utilitySetting, propertyClass);\n\n    @if map-has-key($utilitySetting, ranges) {\n\n      @each $rangeSetting in map-get($utilitySetting, ranges) {\n\n        $start: map-get($rangeSetting, start);\n        $end: map-get($rangeSetting, end);\n        $steps: 1; // default\n\n        @if map-has-key($rangeSetting, steps) {\n          $steps: map-get($rangeSetting, steps);\n        }\n\n        @if map-get($rangeSetting, global) != false {\n\n          $value: $start;\n\n          @while $value <= $end {\n\n            $valueClass: str-replace(to-string($value), '.', '');\n\n            #{'.' + $global-utilities-namespace + $propertyClass + $valueClass} {\n              #{$property}: #{$value};\n            }\n\n            $value: $value + $steps;\n          }\n        }\n      }\n    }\n\n    @if map-has-key($utilitySetting, values) {\n\n      @each $valueSetting in map-get($utilitySetting, values) {\n\n        $value: map-get($valueSetting, value);\n\n        $valueClass: '';\n        @if map-has-key($valueSetting, valueClass) {\n          $valueClass: map-get($valueSetting, valueClass);\n        }\n        @else {\n          $valueClass: $value;\n        }\n\n        @if map-get($valueSetting, global) != false {\n\n          $selector: #{'.' + $global-utilities-namespace + $propertyClass + $valueClass};\n          @include makeClass($selector, $property, $value);\n        }\n\n        @if map-has-key($valueSetting, responsive) {\n          @each $breakpointName in map-get($valueSetting, responsive) {\n            @include breakpoint($breakpointName) {\n\n              $selector: #{'.' + $global-utilities-namespace + $propertyClass + $valueClass + $global-breakpoint-separator + $breakpointName};\n\n              @include makeClass($selector, $property, $value);\n            }\n          }\n        }\n\n        @if map-has-key($valueSetting, pseudo) {\n\n          @each $pseudo in map-get($valueSetting, pseudo) {\n\n            @if (type_of($pseudo) == list) {\n\n              $pseudoClass: str-replace(to-string($pseudo), '\" ', '');\n\n              @each $pseudoName in $pseudo {\n\n                #{'.' + $global-utilities-namespace + $propertyClass + $valueClass + $global-pseudo-separator + $pseudoClass + ':' + $pseudoName} {\n\n                  @extend #{'.' + $global-utilities-namespace + $propertyClass + $valueClass} !optional;\n                }\n              }\n            }\n\n            @else {\n              #{'.' + $global-utilities-namespace + $propertyClass + $valueClass + $global-pseudo-separator + $pseudo + ':' + $pseudo} {\n                @extend #{'.' + $global-utilities-namespace + $propertyClass + $valueClass} !optional;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","%no-content {\n  content: '';\n}\n","/**\n * .o-container\n */\n\n$object: 'container';\n\n#{'.' + $global-objects-namespace + $object} {\n  @extend .u-mh-auto;\n  width: var(--ContainerWidth);\n}\n","/**\n * .o-aspect-ratio\n */\n\n$object: 'aspect-ratio';\n\n#{'.' + $global-objects-namespace + $object} {\n  @extend .u-pos-relative;\n\n  &:before {\n    @extend .u-block;\n    @extend .u-width-100pc;\n    @extend %no-content;\n  }\n\n  > * {\n    @extend .u-pos-absolute;\n  }\n\n  $ratios: (50, 100);\n\n  @each $ratio in $ratios {\n\n    &--#{$ratio} {\n      &:before {\n        padding-top: #{$ratio * 1%};\n      }\n    }\n  }\n}\n","/**\n * .o-absfill\n */\n\n$object: 'absfill';\n\n#{'.' + $global-objects-namespace + $object} {\n  @extend .u-pos-absolute;\n  @extend .u-top-0;\n  @extend .u-left-0;\n  @extend .u-width-100pc;\n  @extend .u-height-100pc;\n}\n\n\n/**\n * .o-abscentre\n */\n\n$object: 'abscentre';\n\n#{'.' + $global-objects-namespace + $object} {\n  @extend .u-pos-absolute;\n  @extend .u-top-50pc;\n  @extend .u-left-50pc;\n  transform: translate(-50%, -50%);\n}\n\n/**\n * .o-abscentre-y\n */\n\n// $object: 'abscentre-y';\n\n// #{'.' + $global-objects-namespace + $object} {\n//   @extend .u-pos-absolute;\n//   @extend .u-top-50pc;\n//   transform: translateY(-50%);\n// }\n\n/**\n * .o-abscentre-x\n */\n\n// $object: 'abscentre-x';\n\n// #{'.' + $global-objects-namespace + $object} {\n//   @extend .u-pos-absolute;\n//   @extend .u-left-50pc;\n//   transform: translateX(-50%);\n// }\n","/**\n * .o-hide\n */\n\n$object: 'hide';\n\n#{'.' + $global-objects-namespace + $object} {\n  @extend .u-z--1;\n  @extend .u-pos-relative;\n  @extend .u-ov-hidden;\n  @extend .u-vis-hidden;\n  @extend .u-pointer-none;\n  clip: rect(0, 0, 0, 0);\n}\n","/**\n * .o-dictate\n * Visually hidden, but provided for screen readers (dictated).\n */\n\n$object: 'dictate';\n\n#{'.' + $global-objects-namespace + $object} {\n  @extend .u-ov-hidden;\n  @extend .u-pos-absolute;\n  @extend .u-width-1px;\n  @extend .u-height-1px;\n  clip: rect(1px, 1px, 1px, 1px);\n}\n","/**\n * .c-button\n */\n\n$component: 'button';\n\n#{'.' + $global-components-namespace + $component} {\n}\n"]}